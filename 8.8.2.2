//Diese Aufgabe wurde zusammen mit MT2_KG_10 im Praktikum gel√∂st.

#include <iostream>
#include <thread>
#include <chrono>

using namespace std;
using namespace chrono;

void task_1() {
	int counter = 1;
	for (counter = 1; counter < 30; counter++) {
		cout << counter << endl << "Ich bin Thread 1.\n";
		this_thread::sleep_for(seconds(1));
	};
}

thread t2;

void task_2() {
	thread::id idR = t2.get_id();
	cout << idR << endl;
}

int main() {

	thread t1(task_1);
	t1.join();
	cout << "Thread 1 wurde beendet.\n";

	t2 = thread(task_2);
	cout << "Thread 2 wurde gestartet.\n";
	thread::id idD = t2.get_id();
	cout << "Die Thread ID lautet: " << t2.get_id();
	t2.join();
	cout << "Thread 2 wurde beendet.\n";

	system("pause");
	return 0;
}
